// Generated by Dagger (https://dagger.dev).
package demo.app.paintball.activities;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import demo.app.paintball.data.rest.RestService;
import demo.app.paintball.util.services.PlayerService;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DashboardActivity_MembersInjector implements MembersInjector<DashboardActivity> {
  private final Provider<RestService> restServiceProvider;

  private final Provider<PlayerService> playerServiceProvider;

  public DashboardActivity_MembersInjector(Provider<RestService> restServiceProvider,
      Provider<PlayerService> playerServiceProvider) {
    this.restServiceProvider = restServiceProvider;
    this.playerServiceProvider = playerServiceProvider;
  }

  public static MembersInjector<DashboardActivity> create(Provider<RestService> restServiceProvider,
      Provider<PlayerService> playerServiceProvider) {
    return new DashboardActivity_MembersInjector(restServiceProvider, playerServiceProvider);
  }

  @Override
  public void injectMembers(DashboardActivity instance) {
    injectRestService(instance, restServiceProvider.get());
    injectPlayerService(instance, playerServiceProvider.get());
  }

  @InjectedFieldSignature("demo.app.paintball.activities.DashboardActivity.restService")
  public static void injectRestService(DashboardActivity instance, RestService restService) {
    instance.restService = restService;
  }

  @InjectedFieldSignature("demo.app.paintball.activities.DashboardActivity.playerService")
  public static void injectPlayerService(DashboardActivity instance, PlayerService playerService) {
    instance.playerService = playerService;
  }
}
