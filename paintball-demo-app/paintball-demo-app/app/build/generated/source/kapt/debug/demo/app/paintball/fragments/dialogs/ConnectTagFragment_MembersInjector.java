// Generated by Dagger (https://dagger.dev).
package demo.app.paintball.fragments.dialogs;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import demo.app.paintball.data.ble.BleService;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ConnectTagFragment_MembersInjector implements MembersInjector<ConnectTagFragment> {
  private final Provider<BleService> bleServiceProvider;

  public ConnectTagFragment_MembersInjector(Provider<BleService> bleServiceProvider) {
    this.bleServiceProvider = bleServiceProvider;
  }

  public static MembersInjector<ConnectTagFragment> create(
      Provider<BleService> bleServiceProvider) {
    return new ConnectTagFragment_MembersInjector(bleServiceProvider);
  }

  @Override
  public void injectMembers(ConnectTagFragment instance) {
    injectBleService(instance, bleServiceProvider.get());
  }

  @InjectedFieldSignature("demo.app.paintball.fragments.dialogs.ConnectTagFragment.bleService")
  public static void injectBleService(ConnectTagFragment instance, BleService bleService) {
    instance.bleService = bleService;
  }
}
